# GitHub Actions workflow for photometry's continuous integration.

name: Tests

on:
  push:
    branches: [master, devel]
  pull_request:
    branches: [master, devel]

jobs:

  # Run unit tests on Linux, OSX and Windows
  pytest:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]

    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup ffmpeg
      uses: FedericoCarboni/setup-ffmpeg@v1
      id: setup-ffmpeg
      with:
        # Not strictly necessary, but it may prevent rate limit
        # errors especially on GitHub-hosted macos machines.
        token: ${{ secrets.GITHUB_TOKEN }}

    #- name: Setup MPI
    #  #if:
    #  run: sudo apt-get install -y openmpi-bin libopenmpi-dev

    - name: Create LFS file list
      run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

    - name: Restore LFS cache
      uses: actions/cache@v2
      id: lfs-cache
      with:
        path: .git/lfs
        key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1

    - name: Git LFS Pull
      run: git lfs pull

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install codecov pytest-cov

    - name: Download cache
      run: python run_download_cache.py -q

    - name: Testing
      run: python -m pytest --cov=./

    - name: Coverage
      run: python -m codecov


  # Use the `flake8` tool to check for syntax errors
  flake8:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.6]

    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
